

.sticky {
  position: fixed !important;
  background-color: white;
  left: 0;
}

#menu {
  height: 108px;
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  font-weight: bold;
  font-size: large;
  background-color: var(--primary-color);
  z-index: 10;

  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0 35px;

  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);
}

#menu h1 {
  font-size: 24px;
  font-weight: 600;
}

#mobile-menu {
  display: none;
}

.menu-holder {
  display: flex;
  justify-content: flex-end;
  align-items: center;
  gap: 48px;
}

.link {
  font-size: 20px;
  color: var(--text-primary);
}

.hidden-desktop {
  display: none;
}

#hero {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: start;
  height: 100vh;
  padding: 0 108px;

  background-image: var(--main-header);
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
}

#ownname {
  color: #00D1C7;
}

#content-header {
  font-size: 52px;
  font-weight: 700;
}

#sub-header {
  font-size: 52px;
  font-weight: 500;
}

#about-me-btn {
  color: white;
  padding: 14px 32px;
  background-color: #00D1C7;
  border-radius: 6px;
  scroll-behavior: smooth;
}

/* Mobile Version */

@media screen and (max-width: 768px) {

  #menu {
      height: 125px;
      margin-bottom: 134px;
      z-index: 10;
  }

  #mobile-menu {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 8px;
      height: 48px;
      border-bottom: 1px solid black;
  }

  #hero {
      padding: 0 35px;
  }

  #mobile-menu h1 {
      font-size: 16px;
      font-weight: 600;
  }

  #btn-close {
      font-size: 30px;
  }

  .hidden-mobile {
      display: none;
  }

  .hidden-desktop {
      display: block;
  }

  #menu ul {
      display: flex;
      flex-direction: column;
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
/* Alternatively, here could be used instead of 'top', 'left', 'right', 'bottom'. Utilizing 'width: 100vw' and 'height: 100vh' provides an alternative approach or I could use inset:0 */
      background-color: var(--primary-color);
  }

  .list-mobile {
      display: list-item;
      flex-grow: 1;
/* This class is applied to both the first and second 'li' elements. 'flex-grow: 1' is employed to expand and center the remaining 'li' items within the menu */
      font-size: 30px;
      padding-right: 21px !important;
  }

  #menu li {
      margin: 0 !important;
      padding: 25px 0;
  }

  .hidden-menu {
      display: none !important;
  }

  #header-content {
      height: 100vh;
/* Specifying in 'vh' considers the size of the display the website is viewed on. On the contrary, '100%' may exhibit somewhat unpredictable behavior. Delve deeper into the differences for a better understanding */
      padding: 0 35px;
  }

  #content-header {
      font-size: 28px;
      font-weight: 700;
  }

  #about-me-btn {
      color: white;
      padding: 8px 16px;
      background-color: #00D1C7;
      border-radius: 6px;
      font-size: 12px;
  }

  #sub-header {
      font-size: 24px;
      font-weight: 500;
  }

  .menu-holder {
  gap: 0;
  }

}